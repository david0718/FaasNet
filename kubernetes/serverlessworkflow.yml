apiVersion: v1
kind: Namespace
metadata:
  name: faas
---
apiVersion: v1
kind: Service
metadata:
  name: faas-website-externalentry
spec:
  type: NodePort
  selector:
    run: faas-website
  ports:
  - port: 4200
    protocol: TCP
    targetPort: 4200
    nodePort: 30003
---
apiVersion: v1
kind: Service
metadata:
  name: faas-gateway-externalentry
spec:
  type: NodePort
  selector:
    run: faas-gateway
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    nodePort: 30001
---
apiVersion: v1
kind: Service
metadata:
  name: faas-eventmesh-entry
spec:
  type: ClusterIP
  selector:
    run: faas-eventmesh
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5001
---
apiVersion: v1
kind: Service
metadata:
  name: faas-application-entry
spec:
  type: ClusterIP
  selector:
    run: faas-application 
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5002
---
apiVersion: v1
kind: Service
metadata:
  name: faas-function-entry
spec:
  type: ClusterIP
  selector:
    run: faas-function 
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5003
---
apiVersion: v1
kind: Service
metadata:
  name: faas-statemachines-entry
spec:
  type: ClusterIP
  selector:
    run: faas-statemachines 
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5004
---
apiVersion: v1
kind: Service
metadata:
  name: faas-gateway-entry
spec:
  type: ClusterIP
  selector:
    run: faas-gateway 
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5006
---
apiVersion: v1
kind: Service
metadata:
  name: faas-kubernetes-entry
spec:
  type: ClusterIP
  selector:
    run: faas-kubernetes
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5010
---
apiVersion: v1
kind: Service
metadata:
  name: faas-prometheus-entry
spec:
  type: ClusterIP
  selector:
    run: faas-prometheus
  ports:
  - port: 80
    protocol: TCP
    targetPort: 9090
---
apiVersion: v1
kind: Service
metadata:
  name: mssql-entry
spec:
  type: ClusterIP
  selector:
    app: mssql
  ports:
  - port: 1433
    protocol: TCP
    targetPort: 1433
---
apiVersion: v1
kind: Service
metadata:
  name: eventstore-cluster
spec:
  type: ClusterIP
  selector:
    app: eventstore-cluster
  ports:
  - port: 2113
    name: eventstore-tcp
    targetPort: 2113
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: faas-eventmesh
spec:
  selector:
    matchLabels:
      run: faas-eventmesh
  replicas: 1
  template:
    metadata:
      labels:
        run: faas-eventmesh
    spec:
      volumes:
      containers:
      - name: faas-eventmesh
        image: localhost:5000/faaseventmesh
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Docker"
        ports:
        - containerPort: 5001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: faas-application
spec:
  selector:
    matchLabels:
      run: faas-application
  replicas: 1
  template:
    metadata:
      labels:
        run: faas-application
    spec:
      volumes:
      containers:
      - name: faas-application
        image: localhost:5000/faasapplication
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Docker"
        ports:
        - containerPort: 5002
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: faas-function
spec:
  selector:
    matchLabels:
      run: faas-function
  replicas: 1
  template:
    metadata:
      labels:
        run: faas-function
    spec:
      volumes:
      - name: prometheus-pv-storage
        persistentVolumeClaim:
          claimName: prometheus-pv-claim
      containers:
      - name: faas-function
        image: localhost:5000/faasfunction
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Docker"
        ports:
        - containerPort: 5003
        volumeMounts:
        - mountPath: "/shared"
          name: prometheus-pv-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: faas-statemachines
spec:
  selector:
    matchLabels:
      run: faas-statemachines
  replicas: 1
  template:
    metadata:
      labels:
        run: faas-statemachines
    spec:
      volumes:
      containers:
      - name: faas-statemachines
        image: localhost:5000/faasstatemachine
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Docker"
        ports:
        - containerPort: 5004
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: faas-gateway
spec:
  selector:
    matchLabels:
      run: faas-gateway
  replicas: 1
  template:
    metadata:
      labels:
        run: faas-gateway
    spec:
      containers:
      - name: faas-gateway
        image: localhost:5000/faasgateway
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Docker"
        ports:
        - containerPort: 5006
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: faas-kubernetes
spec:
  selector:
    matchLabels:
      run: faas-kubernetes
  replicas: 1
  template:
    metadata:
      labels:
        run: faas-kubernetes
    spec:
      containers:
      - name: faas-kubernetes
        image: localhost:5000/faaskubernetes
        ports:
        - containerPort: 5010
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: faas-website
spec:
  selector:
    matchLabels:
      run: faas-website
  replicas: 1
  template:
    metadata:
      labels:
        run: faas-website
    spec:
      containers:
      - name: faas-website
        image: localhost:5000/faaswebsite
        ports:
        - containerPort: 4200
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mssql
    spec:
      terminationGracePeriodSeconds: 10
      securityContext:
        fsGroup: 1000
      containers:
      - name: mssql
        image: mcr.microsoft.com/mssql/server
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: SA_PASSWORD
          value: "D54DE7hHpkG9"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: eventstore-cluster
spec:
  selector:
    matchLabels:
      app: eventstore-cluster 
  serviceName: eventstore-cluster
  replicas: 1
  template:
    metadata:
      labels:
        app: eventstore-cluster 
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - eventstore-cluster
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: eventstore
        image: eventstore/eventstore:21.10.0-buster-slim
        env:
        - name: EVENTSTORE_CLUSTER_SIZE
          value: "1"
        - name: EVENTSTORE_DISCOVER_VIA_DNS
          value: "true"
        - name: EVENTSTORE_CLUSTER_DNS
          value: "eventstore-cluster"
        - name: EVENTSTORE_EXT_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports: 
        - containerPort: 2113
          name: eventstore-web
        - containerPort: 1113
          name: eventstore-tcp
        - containerPort: 2112
          name: gossip
        livenessProbe:
          httpGet:
            path: /
            port: 2113
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /
            port: 2113
          initialDelaySeconds: 5
          periodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: faas-prometheus
spec:
  selector:
    matchLabels:
      run: faas-prometheus
  replicas: 1
  template:
    metadata:
      labels:
        run: faas-prometheus
    spec:
      volumes:
      - name: prometheus-pv-storage
        persistentVolumeClaim:
          claimName: prometheus-pv-claim
      containers:
      - name: faas-website
        image: localhost:5000/faasprometheus
        ports:
        - containerPort: 9090
        volumeMounts:
        - mountPath: "/shared"
          name: prometheus-pv-storage

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: prometheus-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/conf"